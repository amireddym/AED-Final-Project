/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.donarsWorkArea;

import businesslogic.CityName;
import businesslogic.CityNetwork;
import userinterface.systemAdminsWorkArea.*;
import businesslogic.EcoSystem;
import businesslogic.FoodBank;
import businesslogic.User;
import businesslogic.cleaner.Cleaner;
import businesslogic.delivery.DeliveryVolunteer;
import businesslogic.donor.Donation;
import businesslogic.donor.Donor;
import businesslogic.enums.Category;
import businesslogic.enums.DonationStatus;
import businesslogic.enums.PickUp;
import businesslogic.enums.UsageStatus;
import businesslogic.enums.UserRole;
import businesslogic.helper.Constants;
import businesslogic.helper.EmailHelper;
import businesslogic.helper.PhoneNoHelper;
import businesslogic.helper.UserNameHelper;
import businesslogic.helper.ValidateInputs;
import businesslogic.organization.OrgManager;
import businesslogic.organization.Organization;
import businesslogic.sysAdmin.SysAdmin;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.nio.file.Paths;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author manojreddy
 */
public class ViewOrEditDonationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateSysAdminJPanel
     */
    
    private JPanel userProcessJpanel;
    private EcoSystem ecoSystem;
    private User userLogged;
    private Donor donor;
    private String imagePath;
    private Donation donation;
    private CityNetwork cityNetwork;
    
    /**
     * Creates new form MakeNewDonationJPanel
     */
    public ViewOrEditDonationJPanel(JPanel userProcessJpanel, EcoSystem ecoSystem, User userLogged, Donation selectedDonation) {
        initComponents();
        this.userProcessJpanel = userProcessJpanel;
        this.ecoSystem = ecoSystem;
        this.userLogged = userLogged;
        this.donor = (Donor) userLogged;
        this.donation = selectedDonation;
        this.imagePath = donation.getPicture();
        lblpicHolder.setSize(126, 139);
        this.cityNetwork = donation.getCityNetwork();
        
        populateCategories();
        populateCities();
        populatePickUpMode();
        populateUsageStatus();
        populateFields();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usageStatusjComboBox = new javax.swing.JComboBox<>();
        lblpickupmode = new javax.swing.JLabel();
        pickupmodejComboBox = new javax.swing.JComboBox<>();
        lblselectfoodbank = new javax.swing.JLabel();
        selectfoodbankjComboBox = new javax.swing.JComboBox<>();
        txtpickupaddress = new javax.swing.JTextField();
        lblpickupaddress = new javax.swing.JLabel();
        lbldateOfExpiry = new javax.swing.JLabel();
        lblinformation = new javax.swing.JLabel();
        headerjLabel = new javax.swing.JLabel();
        txtinformation = new javax.swing.JTextField();
        lblcity = new javax.swing.JLabel();
        donationcategoryjComboBox = new javax.swing.JComboBox<>();
        btnupdatedonationrequest = new javax.swing.JButton();
        lbldonationCategory = new javax.swing.JLabel();
        lblpicHolder = new javax.swing.JLabel();
        lblusagestatus = new javax.swing.JLabel();
        uploadjButton = new javax.swing.JButton();
        cityjComboBox = new javax.swing.JComboBox<>();
        dateofexpiryDATECHOOSER = new com.toedter.calendar.JDateChooser();
        backjButton2 = new javax.swing.JButton();

        lblpickupmode.setText("PickUp Mode:");

        pickupmodejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickupmodejComboBoxActionPerformed(evt);
            }
        });

        lblselectfoodbank.setText("Select Food Bank:");

        lblpickupaddress.setText("PickUp Address:");

        lbldateOfExpiry.setText("Date of Expiry:");

        lblinformation.setText("Information:");

        headerjLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        headerjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerjLabel.setText("View / Edit My Donation");

        lblcity.setText("City:");

        btnupdatedonationrequest.setText("Update");
        btnupdatedonationrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatedonationrequestActionPerformed(evt);
            }
        });

        lbldonationCategory.setText("Donation Category:");

        lblpicHolder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblpicHolder.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblpicHolderMouseMoved(evt);
            }
        });

        lblusagestatus.setText("Usage Status:");

        uploadjButton.setText("upload");
        uploadjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadjButtonActionPerformed(evt);
            }
        });

        cityjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityjComboBoxActionPerformed(evt);
            }
        });

        backjButton2.setText("< < Back");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backjButton2)
                        .addGap(252, 252, 252)
                        .addComponent(headerjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbldateOfExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dateofexpiryDATECHOOSER, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(119, 119, 119)
                                        .addComponent(uploadjButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblusagestatus, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(usageStatusjComboBox, 0, 129, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lbldonationCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(donationcategoryjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblinformation, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtinformation, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(88, 88, 88)
                                        .addComponent(lblpicHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(112, 112, 112)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblpickupaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(txtpickupaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblpickupmode, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(pickupmodejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblcity, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(cityjComboBox, 0, 129, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblselectfoodbank)
                                        .addGap(33, 33, 33)
                                        .addComponent(selectfoodbankjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(389, 389, 389)
                                .addComponent(btnupdatedonationrequest, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(0, 34, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cityjComboBox, dateofexpiryDATECHOOSER, donationcategoryjComboBox, pickupmodejComboBox, selectfoodbankjComboBox, txtinformation, txtpickupaddress, usageStatusjComboBox});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblcity, lbldateOfExpiry, lbldonationCategory, lblinformation, lblpickupaddress, lblpickupmode, lblselectfoodbank, lblusagestatus});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headerjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backjButton2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(donationcategoryjComboBox, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbldonationCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblusagestatus)
                                    .addComponent(usageStatusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblinformation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtinformation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pickupmodejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblpickupmode))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblselectfoodbank)
                                    .addComponent(selectfoodbankjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtpickupaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblpickupaddress)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblpicHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblcity)
                        .addComponent(cityjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(uploadjButton))
                    .addComponent(lbldateOfExpiry)
                    .addComponent(dateofexpiryDATECHOOSER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(btnupdatedonationrequest)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cityjComboBox, dateofexpiryDATECHOOSER, donationcategoryjComboBox, pickupmodejComboBox, selectfoodbankjComboBox, txtinformation, txtpickupaddress, usageStatusjComboBox});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblcity, lbldateOfExpiry, lbldonationCategory, lblinformation, lblpickupaddress, lblpickupmode, lblselectfoodbank, lblusagestatus});

    }// </editor-fold>//GEN-END:initComponents
    
    

    
    public void populateCategories() {
        
        donationcategoryjComboBox.removeAllItems();
        String[] categories = Category.getCategoriesArray();
        for(String category:categories) {
            donationcategoryjComboBox.addItem(category);
        }
    }
    
    public void populateUsageStatus() {
        
        usageStatusjComboBox.removeAllItems();
        String[] usageStatus = UsageStatus.getUsageStatusArray();
        for(String status:usageStatus) {
            usageStatusjComboBox.addItem(status);
        }
    }
    
    public void populateFoodBanks() {
        selectfoodbankjComboBox.removeAllItems();
        
        for(CityNetwork cityNetwork:ecoSystem.getCityNetworkDirectory().getCityNetworks()) {
            if (cityNetwork.getCityName().name().equals(cityjComboBox.getSelectedItem().toString())){
                if (cityNetwork.getFoodBankDirectory()!=null){
                    for(FoodBank fb : cityNetwork.getFoodBankDirectory().getFoodBanks()){
                       selectfoodbankjComboBox.addItem(fb.getName());
                    }
                }
            }            
        }
    }
    
    public void populatePickUpMode() {
        
        pickupmodejComboBox.removeAllItems();
        String[] modes = PickUp.getPickUpArray();
        for(String mode:modes) {
            pickupmodejComboBox.addItem(mode);
        }
        
        String selectedItem =  pickupmodejComboBox.getSelectedItem().toString();
        if(selectedItem.equalsIgnoreCase("Home")) {
            selectfoodbankjComboBox.setEnabled(false);
        }else{
            selectfoodbankjComboBox.setEnabled(true);
            
        }
    }
    
    public void populateCities() {
        
        List<CityNetwork> cityNetworks = ecoSystem.getCityNetworkDirectory().getCityNetworks();
        cityjComboBox.removeAllItems();
        for(CityNetwork cityNet:ecoSystem.getCityNetworkDirectory().getCityNetworks()) {
            cityjComboBox.addItem(cityNet.getCityName().name());
        }
        
    }
    
    public void populateFields() {
        txtinformation.setText(donation.getInformation());
        donationcategoryjComboBox.setSelectedItem(donation.getCategory().toString());
        usageStatusjComboBox.setSelectedItem(donation.getUsageStatus().toString());
        pickupmodejComboBox.setSelectedItem(donation.getPickUp().toString());
        if (donation.getFoodBank()==null){
            txtpickupaddress.setText(donation.getAddressToPickUp());
            selectfoodbankjComboBox.setEditable(false);
        }else{
            selectfoodbankjComboBox.setSelectedItem(donation.getFoodBank().getName());
        }
        cityjComboBox.setSelectedItem(donation.getCityNetwork().getCityName().name());
        
        dateofexpiryDATECHOOSER.setDate(donation.getDateofExpiry());
        
        if (!donation.getPicture().equals("")){
            setPhoto(imagePath);
        }
    }
    
    
    private void btnupdatedonationrequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatedonationrequestActionPerformed
        String information = txtinformation.getText().isEmpty()?"":txtinformation.getText();
        Category category = Category.valueOf(donationcategoryjComboBox.getSelectedItem().toString());
        UsageStatus usageStatus = UsageStatus.valueOf(usageStatusjComboBox.getSelectedItem().toString());
        PickUp pickUp = PickUp.valueOf(pickupmodejComboBox.getSelectedItem().toString());
        
        String foodBankName = selectfoodbankjComboBox.getSelectedItem().toString();
        FoodBank foodBank = null;
        if (cityNetwork.getFoodBankDirectory()!=null){
            for (FoodBank fb : cityNetwork.getFoodBankDirectory().getFoodBanks()){
                if (fb.getName().equals(foodBankName)){
                    foodBank = fb;
                }
            }
        }
        
        int cityNetworkIndex = cityjComboBox.getSelectedIndex();
        CityNetwork cityNetwork =  ecoSystem.getCityNetworkDirectory().getCityNetworks().get(cityNetworkIndex);
        
        String addressToPickUp = null;
        if ((PickUp.valueOf(pickupmodejComboBox.getSelectedItem().toString())).equals(PickUp.Home)){
            if (txtpickupaddress.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "!Error! Address cannot be empty for Home Pickup");
                return;
            }else{
                addressToPickUp = txtpickupaddress.getText();
            }
        }else{
            if (foodBank!=null){
                addressToPickUp = foodBank.getLocation();;
            }
        }

        Date dateofExpiry = (Date) dateofexpiryDATECHOOSER.getDate();
        
        DonationStatus ds = null;
        if (dateofExpiry.before(new Date())){
            ds = DonationStatus.Expired;
        }else{
            ds = DonationStatus.ReadyToPickup;
        }
        
        
        
        donation.setInformation(information);
        donation.setCategory(category);
        donation.setUsageStatus(usageStatus);
        donation.setPickUp(pickUp);
        donation.setFoodBank(foodBank);
        donation.setCityNetwork(cityNetwork);
        donation.setAddressToPickUp(addressToPickUp);
        donation.setDateofExpiry(dateofExpiry);
        donation.setDonationStatus(ds);
        donation.setPicture(imagePath);
        
        JOptionPane.showMessageDialog(this, "Sucessfully updated the Donation request.");

    }//GEN-LAST:event_btnupdatedonationrequestActionPerformed

    private void uploadjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadjButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("/"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Jpeg format", "jpeg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Jpg format", "jpg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Png format", "png"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            imagePath = selectedFile.getAbsolutePath();
            setPhoto(imagePath);
        }
    }//GEN-LAST:event_uploadjButtonActionPerformed

    private void setPhoto(String imagPath) {
        ImageIcon photo = new ImageIcon(imagPath);
        Image photoResized = photo.getImage().getScaledInstance(lblpicHolder.getWidth(), lblpicHolder.getHeight(),Image.SCALE_SMOOTH);        
        lblpicHolder.setIcon(new ImageIcon(photoResized));
    }
    
    private void pickupmodejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickupmodejComboBoxActionPerformed
        if (((String) pickupmodejComboBox.getSelectedItem()).equals("FoodBank")){
            selectfoodbankjComboBox.setEnabled(true);
            txtpickupaddress.setEditable(false);
            
            populateFoodBanks();
        }else{
            selectfoodbankjComboBox.removeAllItems();
            
            selectfoodbankjComboBox.setEnabled(false);
            txtpickupaddress.setEditable(true);
        }
    }//GEN-LAST:event_pickupmodejComboBoxActionPerformed

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        userProcessJpanel.remove(this);

        Component[] components = userProcessJpanel.getComponents();
        ManageMyDonationsJPanel manageMyDonationsJPanel = (ManageMyDonationsJPanel) components[components.length-1];
        manageMyDonationsJPanel.populateDonationHistoryTable();

        CardLayout cardLayout = (CardLayout) userProcessJpanel.getLayout();
        cardLayout.previous(userProcessJpanel);
    }//GEN-LAST:event_backjButton2ActionPerformed

    private void lblpicHolderMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblpicHolderMouseMoved
        if (!donation.getPicture().equals("")){
            setPhoto(imagePath);
        }
    }//GEN-LAST:event_lblpicHolderMouseMoved

    private void cityjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityjComboBoxActionPerformed
        populateFoodBanks();
    }//GEN-LAST:event_cityjComboBoxActionPerformed


    
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton2;
    private javax.swing.JButton btnupdatedonationrequest;
    private javax.swing.JComboBox<String> cityjComboBox;
    private com.toedter.calendar.JDateChooser dateofexpiryDATECHOOSER;
    private javax.swing.JComboBox<String> donationcategoryjComboBox;
    private javax.swing.JLabel headerjLabel;
    private javax.swing.JLabel lblcity;
    private javax.swing.JLabel lbldateOfExpiry;
    private javax.swing.JLabel lbldonationCategory;
    private javax.swing.JLabel lblinformation;
    private javax.swing.JLabel lblpicHolder;
    private javax.swing.JLabel lblpickupaddress;
    private javax.swing.JLabel lblpickupmode;
    private javax.swing.JLabel lblselectfoodbank;
    private javax.swing.JLabel lblusagestatus;
    private javax.swing.JComboBox<String> pickupmodejComboBox;
    private javax.swing.JComboBox<String> selectfoodbankjComboBox;
    private javax.swing.JTextField txtinformation;
    private javax.swing.JTextField txtpickupaddress;
    private javax.swing.JButton uploadjButton;
    private javax.swing.JComboBox<String> usageStatusjComboBox;
    // End of variables declaration//GEN-END:variables
}
