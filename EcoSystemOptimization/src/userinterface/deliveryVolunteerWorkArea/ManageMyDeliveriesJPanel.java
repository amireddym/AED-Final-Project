/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.deliveryVolunteerWorkArea;

import userinterface.donarsWorkArea.*;
import businesslogic.CityNetwork;
import businesslogic.EcoSystem;
import businesslogic.User;
import businesslogic.donor.Donation;
import businesslogic.donor.Donor;
import businesslogic.enums.Category;
import businesslogic.enums.DonationStatus;
import businesslogic.organization.Organization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manojreddy
 */
public class ManageMyDeliveriesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SysAdminHomeJPanel
     */
    
    private JPanel userProcessJPanel;
    private EcoSystem ecoSystem;
    private CityNetwork cityNetwork;
    private Organization organization;
    private User userLogged;
    
    public ManageMyDeliveriesJPanel(JPanel userProcessJpanel, EcoSystem ecoSystem, CityNetwork cityNetwork, Organization organization, User userLogged) {
        initComponents();
        this.userProcessJPanel = userProcessJPanel;
        this.ecoSystem = ecoSystem;
        this.cityNetwork = cityNetwork;
        this.organization = organization;
        this.userLogged = userLogged;
        
        populateData();

        populateCategories();
        populateDonationHistoryTable();
    }
    
    public void populateCategories() {
        
        donationcategoryjComboBox.removeAllItems();
        String[] categories = Category.getCategoriesArray();
        for(String category:categories) {
            donationcategoryjComboBox.addItem(category);
        }
    }
    
    
    public void populateDonationHistoryTable() {
        
//        int selectedIndex = donationcategoryjComboBox.getSelectedIndex();
//        if(selectedIndex<0) {
//            JOptionPane.showMessageDialog(this, "Please select a category to proceed further");
//            return;
//        }
//        
//        int selectedIndex2 = cityjComboBox.getSelectedIndex();
//        if(selectedIndex2<0) {
//            JOptionPane.showMessageDialog(this, "Please select a city to proceed further");
//            return;
//        }
        
        DefaultTableModel donationHistory = (DefaultTableModel) tbldonationHistory.getModel();
        donationHistory.setRowCount(0);
        
        int donationsCount=0;
        for(Donation donation:donor.getDonations()) {
            if (donation.getCategory().name().equalsIgnoreCase(donationcategoryjComboBox.getSelectedItem().toString())){
            donationsCount++;
            Object[] row = new Object[8];
            row[0]=donationsCount;
            row[1]=donation.getDonor().getName();
            row[2]=donation;
            row[3]=donation.getUsageStatus();
            row[4]=donation.getDonationStatus();
            row[5]=donation.getPickUp();
            row[6]=donation.getDeliveryVolunteer()==null?"Not yet assigned":donation.getDeliveryVolunteer().getName();
            row[7]=donation.getOrganization()==null?"Not yet assigned":donation.getOrganization();
            
            donationHistory.addRow(row);
            }
        }
        countTotaljLabel.setText(String.valueOf(donationsCount));        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        ratingjComboBox = new javax.swing.JComboBox<>();
        currentOrdersHeaderjLabel = new javax.swing.JLabel();
        totalCountHeaderjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        currentOrdersjTable = new javax.swing.JTable();
        totalCountjLabel = new javax.swing.JLabel();
        currentOrdersHeaderjLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        deliveredOrdersjTable = new javax.swing.JTable();
        deliveredjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        feedbackjTextField = new javax.swing.JTextField();

        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Rating :");
        add(jLabel2);
        jLabel2.setBounds(440, 240, 53, 19);

        ratingjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ratingjComboBox.setSelectedIndex(4);
        add(ratingjComboBox);
        ratingjComboBox.setBounds(510, 240, 34, 22);

        currentOrdersHeaderjLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        currentOrdersHeaderjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentOrdersHeaderjLabel.setText("Donations Waiting for PickUp");
        add(currentOrdersHeaderjLabel);
        currentOrdersHeaderjLabel.setBounds(350, 20, 260, 24);

        totalCountHeaderjLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        totalCountHeaderjLabel.setText("Total Count :");
        add(totalCountHeaderjLabel);
        totalCountHeaderjLabel.setBounds(10, 540, 88, 19);

        currentOrdersjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial-No", "CustomerName", "SpecialRequests", "Total Price($)", "Status", "AssignedBy", "Restaurant"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        currentOrdersjTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(currentOrdersjTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 980, 160);

        totalCountjLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        totalCountjLabel.setText("0");
        add(totalCountjLabel);
        totalCountjLabel.setBounds(120, 540, 8, 19);

        currentOrdersHeaderjLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        currentOrdersHeaderjLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentOrdersHeaderjLabel1.setText("Donation History");
        add(currentOrdersHeaderjLabel1);
        currentOrdersHeaderjLabel1.setBounds(380, 310, 202, 24);

        deliveredOrdersjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial-No", "CustomerName", "SpecialRequests", "Total Price($)", "Status", "AssignedBy", "Restaurant"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        deliveredOrdersjTable.getTableHeader().setReorderingAllowed(false);
        deliveredOrdersjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliveredOrdersjTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(deliveredOrdersjTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(10, 350, 980, 160);

        deliveredjButton.setText("Mark Delivered");
        deliveredjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveredjButtonActionPerformed(evt);
            }
        });
        add(deliveredjButton);
        deliveredjButton.setBounds(870, 250, 117, 25);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Feedback :");
        add(jLabel1);
        jLabel1.setBounds(10, 240, 77, 19);
        add(feedbackjTextField);
        feedbackjTextField.setBounds(110, 240, 280, 22);
    }// </editor-fold>//GEN-END:initComponents

    private void deliveredOrdersjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveredOrdersjTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_deliveredOrdersjTableMouseClicked

    private void deliveredjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveredjButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = currentOrdersjTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(this, "Please select a row to update delivery");
            return;
        }

        DefaultTableModel currentOrdersModel = (DefaultTableModel) currentOrdersjTable.getModel();
        Order order = (Order) currentOrdersModel.getValueAt(selectedRow, 3);
        order.setDeliveryPersonCustomerRating(ratingjComboBox.getSelectedIndex()+1);
        order.setDeliveryPersonFeedback(feedbackjTextField.getText());
        order.setOrderStatus(OrderStatus.Delivered);
        order.setLastUpdatedDate(new Date());
        order.setModifiedBy(userAccount.getName());
        populateData();
    }//GEN-LAST:event_deliveredjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentOrdersHeaderjLabel;
    private javax.swing.JLabel currentOrdersHeaderjLabel1;
    private javax.swing.JTable currentOrdersjTable;
    private javax.swing.JTable deliveredOrdersjTable;
    private javax.swing.JButton deliveredjButton;
    private javax.swing.JTextField feedbackjTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> ratingjComboBox;
    private javax.swing.JLabel totalCountHeaderjLabel;
    private javax.swing.JLabel totalCountjLabel;
    // End of variables declaration//GEN-END:variables
}
